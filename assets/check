#!/bin/sh
# vim: set ft=sh

set -ex

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

. $(dirname $0)/common.sh

# for jq
PATH=/usr/local/bin:$PATH

payload=$TMPDIR/git-resource-request

cat > $payload <&0

load_pubkey $payload

uri=$(jq -r '.source.uri // ""' < $payload)
branch=$(jq -r '.source.branch // ""' < $payload)
pool_name=$(jq -r '.source.pool // ""' < $payload)
ref=$(jq -r '.version.ref // ""' < $payload)


if [ -z "$uri" ]; then
  config_errors="${config_errors}invalid payload (missing uri)\n"
fi

if [ -z "$branch" ]; then
  config_errors="${config_errors}invalid payload (missing branch)\n"
fi

if [ -z "$pool_name" ]; then
  config_errors="${config_errors}invalid payload (missing pool)\n"
fi

if [ -n "$config_errors" ]; then
  echo -e $config_errors
  exit 1
fi

destination=$TMPDIR/git-resource-repo-cache

if [ -d $destination ]; then
  cd $destination
  git fetch
  git reset --hard FETCH_HEAD
else
  branchflag=""
  if [ -n "$branch" ]; then
    branchflag="--branch $branch"
  fi

  git clone $uri $branchflag $destination
  cd $destination
fi

# count all added locks
$num_current_locks=`ls $pool_name/unclaimed | wc -l`

  if [ -n "$ref" ] && git cat-file -e "$ref"; then
    git checkout $ref
    num_previous_locks=`ls $pool_name/unclaimed | wc -l`
    git checkout $branch
  else
    num_previous_locks=0
  fi

num_new_locks=$num


# if triggers file does not exist create it with value 0
if [ ! -f $pool_name/.pending-triggers ]; then
  echo 0 > $pool_name/.pending-triggers
fi

typeset -i old_pending_triggers=$(cat $pool_name/.pending-triggers)
typeset -i new_pending_triggers=$(git show --pretty="format:" --name-status -r $ref..HEAD -- ./$pool_name/unclaimed/ | grep "^A" |wc -l)

total_pending_triggers=$($old_pending_triggers + $new_pending_triggers)

# if triggers == locks then exit 0
if [ $((old_pending_triggers + new_pending_triggers)) -eq 0 ]; then 
  echo '[]' >&3
  exit 0
fi

echo $((total_pending_triggers - 1)) > $pool_name/.pending-triggers

if [ -n "$ref" ] && git cat-file -e "$ref"; then
  result=$(git log --reverse ${ref}..HEAD --pretty='format:%H' -- $pool_name/unclaimed)
else
  result=$(git log -1 --pretty='format:%H' -- $pool_name/unclaimed)
fi

echo git add $pool_name/.pending-triggers
echo git commit -m "updates tally of pending triggers in $pool_name to $total_pending_triggers"
echo git pull --rebase
echo git push

echo $result | jq -R '.' | jq -s "map({ref: .})" >&3
